{"version":3,"sources":["utils/queries.js","utils/helpers.js","components/CartItem/index.js","utils/actions.js","utils/auth.js","components/Cart/index.js","pages/Home.js","pages/LogIn.js","components/ProductItem/index.js","components/ProductList/index.js","components/CategoryMenu/index.js","pages/products.js","components/Jumbotron/index.js","utils/mutations.js","pages/Success.js","pages/contact.js","components/Nav/index.js","pages/OrderHistory.js","pages/Detail.js","pages/NoMatch.js","utils/reducers.js","utils/store.js","components/Profile/Comment.js","components/Profile/Upload.js","components/Profile/Skills.js","pages/profile.js","App.js","index.js","assets/spinner.gif","assets/blankprofile.png"],"names":["QUERY_USER","gql","QUERY_CHECKOUT","QUERY_PRODUCTS","QUERY_CATEGORIES","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close","CartItem","item","dispatch","useDispatch","className","src","image","alt","name","price","type","placeholder","value","purchaseQuantity","onChange","target","parseInt","role","aria-label","onClick","removeFromCart","decode","this","getToken","token","isTokenExpired","exp","Date","now","localStorage","removeItem","getItem","idToken","setItem","location","assign","reload","stripePromise","loadStripe","Cart","state","useSelector","useLazyQuery","getCheckout","data","toggleCart","useEffect","then","res","redirectToCheckout","sessionId","checkout","session","a","cart","products","length","getCart","cartOpen","map","key","sum","forEach","toFixed","calculateTotal","Auth","loggedIn","productIds","i","push","variables","Home","Row","Col","xs","md","Carousel","Item","interval","fluid","Jumbotron","Button","variant","size","Login","ProductItem","quantity","to","count","pluralize","itemInCart","find","cartItem","product","ProductList","currentCategory","useQuery","loading","filter","category","spinner","CategoryMenu","categories","categoryData","id","Product","children","style","height","clear","paddingTop","textAlign","ADD_ORDER","Success","useMutation","addOrder","setTimeout","saveOrder","Contact","class","width","Nav","Navbar","bg","Container","Brand","href","blankprofile","logout","OrderHistory","user","firstName","lastName","orders","order","purchaseDate","toLocaleDateString","index","Detail","useParams","useState","currentProduct","setCurrentProduct","indexedProducts","description","disabled","p","NoMatch","initialState","reducers","action","newState","createStore","Comment","Upload","uploadImage","React","useRef","imageUploader","Card","current","click","ref","accept","multiple","file","files","reader","FileReader","onload","readAsDataURL","display","Skills","Table","striped","bordered","hover","draggable","Profile","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","component","Products","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.731a1d0f.chunk.js","sourcesContent":["import { gql } from '@apollo/client';\r\n\r\nexport const QUERY_USER = gql`\r\n  query user($username: String!) {\r\n    user(username: $username) {\r\n      _id\r\n      username\r\n      email\r\n      thoughts {\r\n        _id\r\n        thoughtText\r\n        createdAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_CHECKOUT = gql`\r\n  query getCheckout($products: [ID]!) {\r\n    checkout(products: $products) {\r\n      session\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_PRODUCTS = gql`\r\n  query getProducts($category: ID) {\r\n    products(category: $category) {\r\n      _id\r\n      name\r\n      description\r\n      price\r\n      quantity\r\n      image\r\n      category {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_ALL_PRODUCTS = gql`\r\n  {\r\n    products {\r\n      _id\r\n      name\r\n      description\r\n      price\r\n      quantity\r\n      category {\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_CATEGORIES = gql`\r\n  {\r\n    categories {\r\n      _id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_ME = gql`\r\n  query me {\r\n    me {\r\n      _id\r\n      username\r\n      email\r\n      thoughts {\r\n        _id\r\n        thoughtText\r\n        thoughtAuthor\r\n        createdAt\r\n      }\r\n    }\r\n  }\r\n`;","export function pluralize(name, count) {\r\n  if (count === 1) {\r\n    return name;\r\n  }\r\n  return name + 's';\r\n}\r\n\r\nexport function idbPromise(storeName, method, object) {\r\n  return new Promise((resolve, reject) => {\r\n    const request = window.indexedDB.open('shop-shop', 1);\r\n    let db, tx, store;\r\n    request.onupgradeneeded = function(e) {\r\n      const db = request.result;\r\n      db.createObjectStore('products', { keyPath: '_id' });\r\n      db.createObjectStore('categories', { keyPath: '_id' });\r\n      db.createObjectStore('cart', { keyPath: '_id' });\r\n    };\r\n\r\n    request.onerror = function(e) {\r\n      console.log('There was an error');\r\n    };\r\n\r\n    request.onsuccess = function(e) {\r\n      db = request.result;\r\n      tx = db.transaction(storeName, 'readwrite');\r\n      store = tx.objectStore(storeName);\r\n\r\n      db.onerror = function(e) {\r\n        console.log('error', e);\r\n      };\r\n\r\n      switch (method) {\r\n        case 'put':\r\n          store.put(object);\r\n          resolve(object);\r\n          break;\r\n        case 'get':\r\n          const all = store.getAll();\r\n          all.onsuccess = function() {\r\n            resolve(all.result);\r\n          };\r\n          break;\r\n        case 'delete':\r\n          store.delete(object._id);\r\n          break;\r\n        default:\r\n          console.log('No valid method');\r\n          break;\r\n      }\r\n\r\n      tx.oncomplete = function() {\r\n        db.close();\r\n      };\r\n    };\r\n  });\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\r\nimport { idbPromise } from \"../../utils/helpers\";\r\n\r\nconst CartItem = ({ item }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const removeFromCart = item => {\r\n    dispatch({\r\n      type: REMOVE_FROM_CART,\r\n      _id: item._id\r\n    });\r\n    idbPromise('cart', 'delete', { ...item });\r\n\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const value = e.target.value;\r\n    if (value === '0') {\r\n      dispatch({\r\n        type: REMOVE_FROM_CART,\r\n        _id: item._id\r\n      });\r\n      idbPromise('cart', 'delete', { ...item });\r\n\r\n    } else {\r\n      dispatch({\r\n        type: UPDATE_CART_QUANTITY,\r\n        _id: item._id,\r\n        purchaseQuantity: parseInt(value)\r\n      });\r\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\r\n\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex-row\">\r\n      <div>\r\n        <img\r\n          src={`/images/${item.image}`}\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <div>{item.name}, ${item.price}</div>\r\n        <div>\r\n          <span>Qty:</span>\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"1\"\r\n            value={item.purchaseQuantity}\r\n            onChange={onChange}\r\n          />\r\n          <span\r\n            role=\"img\"\r\n            aria-label=\"trash\"\r\n            onClick={() => removeFromCart(item)}\r\n          >\r\n            🗑️\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CartItem;","//exports needed for cart section actions\r\nexport const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\r\nexport const ADD_TO_CART = \"ADD_TO_CART\";\r\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\r\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\r\nexport const CLEAR_CART = \"CLEAR_CART\";\r\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\r\nexport const TOGGLE_CART = \"TOGGLE_CART\";\r\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\r\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\r\n","//import for node_modules>jwt-decode \r\nimport decode from 'jwt-decode';\r\n\r\nclass AuthService {\r\n  getProfile() {\r\n    return decode(this.getToken());\r\n  }\r\n\r\n  loggedIn() {\r\n    const token = this.getToken();\r\n    // If there is a token and it's not expired, return `true`\r\n    return token && !this.isTokenExpired(token) ? true : false;\r\n  }\r\n\r\n  isTokenExpired(token) {\r\n    // Decode the token to get its expiration time that was set by the server\r\n    const decoded = decode(token);\r\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\r\n    if (decoded.exp < Date.now() / 1000) {\r\n      localStorage.removeItem('id_token');\r\n      return true;\r\n    }\r\n    // If token hasn't passed its expiration time, return `false`\r\n    return false;\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem('id_token');\r\n  }\r\n\r\n  login(idToken) {\r\n    localStorage.setItem('id_token', idToken);\r\n    window.location.assign('/');\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('id_token');\r\n    window.location.reload('/');\r\n  }\r\n}\r\n\r\nexport default new AuthService();","import React, { useEffect } from 'react';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { useLazyQuery } from '@apollo/client';\r\nimport { QUERY_CHECKOUT } from '../../utils/queries';\r\nimport { idbPromise } from '../../utils/helpers';\r\nimport CartItem from '../CartItem';\r\nimport Auth from '../../utils/auth';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\r\nimport '../Cart/style.css';\r\n\r\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\r\n\r\nconst Cart = () => {\r\n  const dispatch = useDispatch();\r\n  const state = useSelector((state) => state);\r\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      stripePromise.then((res) => {\r\n        res.redirectToCheckout({ sessionId: data.checkout.session });\r\n      });\r\n    }\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    async function getCart() {\r\n      const cart = await idbPromise('cart', 'get');\r\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\r\n    }\r\n\r\n    if (!state.cart.length) {\r\n      getCart();\r\n    }\r\n  }, [state.cart.length, dispatch]);\r\n\r\n  function toggleCart() {\r\n    dispatch({ type: TOGGLE_CART });\r\n  }\r\n\r\n  function calculateTotal() {\r\n    let sum = 0;\r\n    state.cart.forEach((item) => {\r\n      sum += item.price * item.purchaseQuantity;\r\n    });\r\n    return sum.toFixed(2);\r\n  }\r\n\r\n  function submitCheckout() {\r\n    const productIds = [];\r\n\r\n    state.cart.forEach((item) => {\r\n      for (let i = 0; i < item.purchaseQuantity; i++) {\r\n        productIds.push(item._id);\r\n      }\r\n    });\r\n\r\n    getCheckout({\r\n      variables: { products: productIds },\r\n    });\r\n  }\r\n\r\n  if (!state.cartOpen) {\r\n    return (\r\n      <div className=\"cart-closed\" onClick={toggleCart}>\r\n        <span role=\"img\" aria-label=\"trash\">\r\n          🛒\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"cart\">\r\n      <div className=\"close\" onClick={toggleCart}>\r\n        [close]\r\n      </div>\r\n      <h2>Shopping Cart</h2>\r\n      {state.cart.length ? (\r\n        <div>\r\n          {state.cart.map((item) => (\r\n            <CartItem key={item._id} item={item} />\r\n          ))}\r\n\r\n          <div className=\"flex-row space-between\">\r\n            <strong>Total: ${calculateTotal()}</strong>\r\n\r\n            {Auth.loggedIn() ? (\r\n              <button onClick={submitCheckout}>Checkout</button>\r\n            ) : (\r\n              <span>(log in to check out)</span>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <h3>\r\n          <span role=\"img\" aria-label=\"shocked\">\r\n            😱\r\n          </span>\r\n          You haven't added anything to your cart yet!\r\n        </h3>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import React from 'react';\r\nimport Cart from \"../components/Cart\";\r\nimport {\r\n  Carousel,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Jumbotron\r\n} from 'react-bootstrap';\r\nimport \"../../node_modules/bootstrap/dist/css/bootstrap.css\"\r\n\r\n\r\nconst Home = () => {\r\n\r\n  return (\r\n    <Row>\r\n      <Col xs={12} md={8}>\r\n        <Carousel>\r\n          <Carousel.Item interval={900}>\r\n            <img fluid\r\n              className=\"d-block w-100\"\r\n              src=\"./images/html-basic.png\"\r\n              alt=\"HTML\"\r\n            />\r\n          </Carousel.Item>\r\n          <Carousel.Item interval={900}>\r\n            <img fluid\r\n              className=\"d-block w-100\"\r\n              src=\"./images/CSS.png\"\r\n              alt=\"CSS\"\r\n            />\r\n          </Carousel.Item>\r\n          <Carousel.Item interval={900}>\r\n            <img fluid\r\n              className=\"d-block w-100\"\r\n              src=\"./images/Java.jpg\"\r\n              alt=\"Java\"\r\n            />\r\n          </Carousel.Item>\r\n          <Carousel.Item interval={500}>\r\n            <img fluid\r\n              className=\"d-block w-100\"\r\n              src=\"./images/OOP.png\"\r\n              alt=\"OOP\"\r\n            />\r\n          </Carousel.Item>\r\n          <Carousel.Item interval={500}>\r\n            <img fluid\r\n              className=\"d-block w-100\"\r\n              src=\"./images/SQL.png\"\r\n              alt=\"SQL\"\r\n            />\r\n          </Carousel.Item>\r\n          <Carousel.Item interval={500}>\r\n            <img fluid\r\n              className=\"d-block w-100\"\r\n              src=\"./images/ORM.png\"\r\n              alt=\"ORM\"\r\n            />\r\n          </Carousel.Item>\r\n          <Carousel.Item interval={500}>\r\n            <img fluid\r\n              className=\"d-block w-100\"\r\n              src=\"./images/MVC.png\"\r\n              alt=\"MVC\"\r\n            />\r\n          </Carousel.Item>\r\n          <Carousel.Item interval={500}>\r\n            <img fluid\r\n              className=\"d-block w-100\"\r\n              src=\"./images/CS.png\"\r\n              alt=\"CS\"\r\n            />\r\n          </Carousel.Item>\r\n          <Carousel.Item interval={500}>\r\n            <img fluid\r\n              className=\"d-block w-100\"\r\n              src=\"./images/NoSQL.png\"\r\n              alt=\"NoSQL\"\r\n            />\r\n          </Carousel.Item>\r\n          <Carousel.Item interval={500}>\r\n            <img fluid\r\n              className=\"d-block w-100\"\r\n              src=\"./images/PWA.png\"\r\n              alt=\"PWA\"\r\n            />\r\n          </Carousel.Item>\r\n          <Carousel.Item interval={500}>\r\n            <img fluid\r\n              className=\"d-block w-100\"\r\n              src=\"./images/React.png\"\r\n              alt=\"CSS\"\r\n            />\r\n          </Carousel.Item>\r\n          <Carousel.Item interval={500}>\r\n            <img fluid\r\n              className=\"d-block w-100\"\r\n              src=\"./images/MERN.png\"\r\n              alt=\"CSS\"\r\n            />\r\n          </Carousel.Item>\r\n          <Carousel.Item interval={500}>\r\n            <img fluid\r\n              className=\"d-block w-100\"\r\n              src=\"./images/State.png\"\r\n              alt=\"State\"\r\n            />\r\n          </Carousel.Item>\r\n          <Carousel.Item interval={500}>\r\n            <img fluid\r\n              className=\"d-block w-100\"\r\n              src=\"./images/.png\"\r\n              alt=\"CSS\"\r\n            />\r\n          </Carousel.Item>\r\n        </Carousel>\r\n        <Cart />\r\n      </Col>\r\n\r\n      <Col xs={6} md={4} className=\"sitestory\">\r\n        <Jumbotron>\r\n          <h1>Explore the fundamentals that goes into building a website. </h1><br></br>\r\n          <h7>This could apply to anything from creating a single plain text webpage\r\n                  to developing a complex web application.</h7>\r\n        </Jumbotron>\r\n\r\n        <div className=\"d-grid gap-2\">\r\n          <Button variant=\"primary\" size=\"lg\">\r\n            Build a website!\r\n          </Button>\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n\r\n  );\r\n};\r\n\r\nexport default Home;","import React from 'react';\n\n\nconst Login =() => {\nreturn(\n    <div>\n    <h1>THIS IS OUR LOGIN PAGE</h1>\n  </div>\n)\n}\n\nexport default Login","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { pluralize } from '../../utils/helpers';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from '../../utils/actions';\r\nimport { idbPromise } from '../../utils/helpers';\r\n\r\nfunction ProductItem(item) {\r\n  const dispatch = useDispatch();\r\n  const state = useSelector((state) => state);\r\n\r\n  const { image, name, _id, price, quantity } = item;\r\n\r\n  const { cart } = state;\r\n\r\n  const addToCart = () => {\r\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id);\r\n    if (itemInCart) {\r\n      dispatch({\r\n        type: UPDATE_CART_QUANTITY,\r\n        _id: _id,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\r\n      });\r\n      idbPromise('cart', 'put', {\r\n        ...itemInCart,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: ADD_TO_CART,\r\n        product: { ...item, purchaseQuantity: 1 },\r\n      });\r\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card px-1 py-1\">\r\n      <Link to={`/products/${_id}`}>\r\n        <img alt={name} src={`/images/${image}`} />\r\n        <p>{name}</p>\r\n      </Link>\r\n      <div>\r\n        <div>\r\n          {quantity} {pluralize('item', quantity)} in stock\r\n        </div>\r\n        <span>${price}</span>\r\n      </div>\r\n      <button onClick={addToCart}>Add to cart</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductItem;\r\n","import React, { useEffect } from 'react';\r\nimport ProductItem from '../ProductItem';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\r\nimport { useQuery } from '@apollo/client';\r\nimport { QUERY_PRODUCTS } from '../../utils/queries';\r\nimport { idbPromise } from '../../utils/helpers';\r\nimport spinner from '../../assets/spinner.gif';\r\n\r\nfunction ProductList() {\r\n  const dispatch = useDispatch();\r\n  const state = useSelector((state) => state);\r\n\r\n  const { currentCategory } = state;\r\n\r\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      dispatch({\r\n        type: UPDATE_PRODUCTS,\r\n        products: data.products,\r\n      });\r\n      data.products.forEach((product) => {\r\n        idbPromise('products', 'put', product);\r\n      });\r\n    } else if (!loading) {\r\n      idbPromise('products', 'get').then((products) => {\r\n        dispatch({\r\n          type: UPDATE_PRODUCTS,\r\n          products: products,\r\n        });\r\n      });\r\n    }\r\n  }, [data, loading, dispatch]);\r\n\r\n  function filterProducts() {\r\n    if (!currentCategory) {\r\n      return state.products;\r\n    }\r\n\r\n    return state.products.filter(\r\n      (product) => product.category._id === currentCategory\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"my-2\">\r\n      <h2>Our Products:</h2>\r\n      {state.products.length ? (\r\n        <div className=\"flex-row\">\r\n          {filterProducts().map((product) => (\r\n            <ProductItem\r\n              key={product._id}\r\n              _id={product._id}\r\n              image={product.image}\r\n              name={product.name}\r\n              price={product.price}\r\n              quantity={product.quantity}\r\n            />\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <h3>You haven't added any products yet!</h3>\r\n      )}\r\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductList;\r\n","import React, { useEffect } from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  UPDATE_CATEGORIES,\r\n  UPDATE_CURRENT_CATEGORY,\r\n} from '../../utils/actions';\r\nimport { QUERY_CATEGORIES } from '../../utils/queries';\r\nimport { idbPromise } from '../../utils/helpers';\r\n\r\nfunction CategoryMenu() {\r\n  const dispatch = useDispatch();\r\n  const state = useSelector((state) => state);\r\n\r\n  const { categories } = state;\r\n\r\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\r\n\r\n  useEffect(() => {\r\n    if (categoryData) {\r\n      dispatch({\r\n        type: UPDATE_CATEGORIES,\r\n        categories: categoryData.categories,\r\n      });\r\n      categoryData.categories.forEach((category) => {\r\n        idbPromise('categories', 'put', category);\r\n      });\r\n    } else if (!loading) {\r\n      idbPromise('categories', 'get').then((categories) => {\r\n        dispatch({\r\n          type: UPDATE_CATEGORIES,\r\n          categories: categories,\r\n        });\r\n      });\r\n    }\r\n  }, [categoryData, loading, dispatch]);\r\n\r\n  const handleClick = (id) => {\r\n    dispatch({\r\n      type: UPDATE_CURRENT_CATEGORY,\r\n      currentCategory: id,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Choose a Coding Language:</h2>\r\n      {categories.map((item) => (\r\n        <button\r\n          key={item._id}\r\n          onClick={() => {\r\n            handleClick(item._id);\r\n          }}\r\n        >\r\n          {item.name}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CategoryMenu;\r\n","import React from \"react\";\r\nimport ProductList from \"../components/ProductList\";\r\nimport CategoryMenu from \"../components/CategoryMenu\";\r\nimport Cart from \"../components/Cart\";\r\n\r\nconst Product = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <CategoryMenu />\r\n      <ProductList />\r\n      <Cart />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import React from 'react';\r\n\r\nfunction Jumbotron({ children }) {\r\n  return (\r\n    <div\r\n      style={{\r\n        height: 560,\r\n        clear: 'both',\r\n        paddingTop: 120,\r\n        textAlign: 'center',\r\n      }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Jumbotron;\r\n","import { gql } from '@apollo/client';\r\n\r\nexport const LOGIN = gql`\r\n  mutation login($email: String!, $password: String!) {\r\n    login(email: $email, password: $password) {\r\n      token\r\n      user {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_ORDER = gql`\r\n  mutation addOrder($products: [ID]!) {\r\n    addOrder(products: $products) {\r\n      purchaseDate\r\n      products {\r\n        _id\r\n        name\r\n        description\r\n        price\r\n        quantity\r\n        category {\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_USER = gql`\r\n  mutation addUser(\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $email: String!\r\n    $password: String!\r\n  ) {\r\n    addUser(\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      email: $email\r\n      password: $password\r\n    ) {\r\n      token\r\n      user {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { useEffect } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport Jumbotron from '../components/Jumbotron';\r\nimport { ADD_ORDER } from '../utils/mutations';\r\nimport { idbPromise } from '../utils/helpers';\r\n\r\nfunction Success() {\r\n  const [addOrder] = useMutation(ADD_ORDER);\r\n\r\n  useEffect(() => {\r\n    async function saveOrder() {\r\n      const cart = await idbPromise('cart', 'get');\r\n      const products = cart.map((item) => item._id);\r\n\r\n      if (products.length) {\r\n        const { data } = await addOrder({ variables: { products } });\r\n        const productData = data.addOrder.products;\r\n\r\n        productData.forEach((item) => {\r\n          idbPromise('cart', 'delete', item);\r\n        });\r\n      }\r\n\r\n      setTimeout(() => {\r\n        window.location.assign('/');\r\n      }, 3000);\r\n    }\r\n\r\n    saveOrder();\r\n  }, [addOrder]);\r\n\r\n  return (\r\n    <div>\r\n      <Jumbotron>\r\n        <h1>Success!</h1>\r\n        <h2>Thank you for your purchase!</h2>\r\n        <h2>You will now be redirected to the home page</h2>\r\n      </Jumbotron>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Success;\r\n","import React from 'react';\n\nconst Contact = () => {\n\n    return (\n\n        <div className=\"text-center\">\n            <h1>MEET THE TEAM</h1>\n            <div className=\"column\">\n                <div className=\"card center\">\n                    <img src =\"https://avatars.githubusercontent.com/u/87666809?v=4\" class=\"rounded mx-auto d-block\" alt=\"Jane\" style={{ height: '25%', width: '25%' }} />\n                    <div className=\"container\">\n                        <h2>Kimberly Aguilar</h2>\n                        <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                        <p><button className=\"button mr-2\">GitHub</button></p>\n                        <p><button className=\"button\">Email</button></p></div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"column\">\n                <div className=\"card\">\n                    <img src =\"https://avatars.githubusercontent.com/u/87789140?v=4\" class=\"rounded mx-auto d-block\" alt=\"Jane\" style={{ height: '25%', width: '25%'  }} />\n                    <div className=\"container\">\n                        <h2>Ricardo Crossley</h2>\n                        <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                        <p><button className=\"button mr-2\">GitHub</button></p>\n                        <p><button className=\"button\">Email</button></p></div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"column\">\n                <div className=\"card\">\n                    <img src =\"https://avatars.githubusercontent.com/u/86133108?v=4\" class=\"rounded mx-auto d-block\" alt=\"Jane\" style={{ height: '25%', width: '25%' }} />\n                    <div className=\"container\">\n                        <h2>Edgar Fernandez</h2>\n                        <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                        <p><button className=\"button mr-2\">GitHub</button></p>\n                        <p><button className=\"button\">Email</button></p></div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"column\">\n                <div className=\"card\">\n                    <img src =\"https://avatars.githubusercontent.com/u/87237312?v=4\" class=\"rounded mx-auto d-block\" alt=\"Jane\" style={{ height: '25%', width: '25%'  }} />\n                    <div className=\"container\">\n                        <h2>Thao Nguyen</h2>\n                        <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                        <p><button className=\"button mr-2\">GitHub</button></p>\n                        <p><button className=\"button\">Email</button></p></div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"column\">\n                <div className=\"card\">\n                    <img src =\"https://avatars.githubusercontent.com/u/88949064?v=4\" class=\"rounded mx-auto d-block\" alt=\"Jane\" style={{ height: '25%', width: '25%'  }} />\n                    <div className=\"container\">\n                        <h2>Denny Jalate</h2>\n                        <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                        <p><button className=\"button mr-2\">GitHub</button></p>\n                        <p><button className=\"button\">Email</button></p></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\n\n\nexport default Contact;\n","import React from 'react';\r\nimport Auth from '../../utils/auth';\r\nimport { Link } from 'react-router-dom';\r\nimport {Navbar,Container} from 'react-bootstrap';\r\nimport blankprofile from \"../../assets/blankprofile.png\"\r\n\r\nfunction Nav() {\r\n  function showNavigation() {\r\n    if (Auth.loggedIn()) {\r\n      return (\r\n        <ul className=\"flex-row\">\r\n\r\n          <li className=\"mx-1\">\r\n            <Link to=\"/\">Home</Link>\r\n          </li>\r\n          <li className=\"mx-1\">\r\n            <Link to=\"/products\">Products</Link>\r\n          </li>\r\n          <li className=\"mx-1\">\r\n            <Link to=\"/Contact\">Contact</Link>\r\n          </li>\r\n          <li className=\"mx-1\">\r\n            <Link to=\"/orderHistory\">Order History</Link>\r\n          </li>\r\n          <li className=\"mx-1\">\r\n            <Link to=\"/profile\">Profile</Link>\r\n          </li>\r\n\r\n          <li className=\"mx-1\">\r\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\r\n            <a href=\"/\" onClick={() => Auth.logout()}>\r\n              Logout\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n        <ul className=\"flex-row\">\r\n          <li className=\"mx-4\">\r\n            <Link to=\"/\">Home</Link>\r\n          </li>\r\n          <li className=\"mx-4\">\r\n            <Link to=\"/products\">Products</Link>\r\n          </li>\r\n          <li className=\"mx-4\">\r\n            <Link to=\"/Contact\">Contact</Link>\r\n          </li>\r\n          <li className=\"mx-4\">\r\n            <Link to=\"/profile\">Profile</Link>\r\n          </li>\r\n          <li className=\"mx-4\">\r\n            <Link to=\"/signup\">Signup</Link>\r\n          </li>\r\n          <li className=\"mx-4\">\r\n            <Link to=\"/login\">Login</Link>\r\n          </li>\r\n         </ul>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    // <header className=\"flex-row px-1\">\r\n    //   <h1>\r\n    //     <Link to=\"/\">\r\n    //       <span role=\"img\" aria-label=\"Home Page\">\r\n    //       💻 \r\n    //       </span>\r\n    //       🅦🅔🅑 🅣🅗🅔 🅑🅤🅘🅛🅓🅔🅡\r\n    //     </Link>\r\n    //   </h1>\r\n\r\n    //   <nav>{showNavigation()}</nav>\r\n    // </header>\r\n<Navbar bg=\"dark\" variant=\"dark\">\r\n  <Container>\r\n    <Navbar.Brand href=\"/\">\r\n      <img\r\n        alt=\"Web the builder logo\"\r\n        src={blankprofile}\r\n        width=\"30\"\r\n        height=\"30\"\r\n        className=\"d-inline-block align-top\"\r\n      />{' '}\r\n    Web the Builder\r\n    </Navbar.Brand>\r\n    <Nav className=\"me-auto\">\r\n      {showNavigation()}\r\n    </Nav>\r\n  </Container>\r\n</Navbar>\r\n    \r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useQuery } from '@apollo/client';\r\nimport { QUERY_USER } from '../utils/queries';\r\n\r\nfunction OrderHistory() {\r\n  const { data } = useQuery(QUERY_USER);\r\n  let user;\r\n\r\n  if (data) {\r\n    user = data.user;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container my-1\">\r\n        <Link to=\"/\">← Back to Products</Link>\r\n\r\n        {user ? (\r\n          <>\r\n            <h2>\r\n              Order History for {user.firstName} {user.lastName}\r\n            </h2>\r\n            {user.orders.map((order) => (\r\n              <div key={order._id} className=\"my-2\">\r\n                <h3>\r\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\r\n                </h3>\r\n                <div className=\"flex-row\">\r\n                  {order.products.map(({ _id, image, name, price }, index) => (\r\n                    <div key={index} className=\"card px-1 py-1\">\r\n                      <Link to={`/products/${_id}`}>\r\n                        <img alt={name} src={`/images/${image}`} />\r\n                        <p>{name}</p>\r\n                      </Link>\r\n                      <div>\r\n                        <span>${price}</span>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </>\r\n        ) : null}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OrderHistory;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Cart from '../components/Cart';\r\nimport {\r\n  REMOVE_FROM_CART,\r\n  UPDATE_CART_QUANTITY,\r\n  ADD_TO_CART,\r\n  UPDATE_PRODUCTS,\r\n} from '../utils/actions';\r\nimport { QUERY_PRODUCTS } from '../utils/queries';\r\nimport { idbPromise } from '../utils/helpers';\r\nimport spinner from '../assets/spinner.gif';\r\n\r\nfunction Detail() {\r\n  const dispatch = useDispatch();\r\n  const state = useSelector((state) => state);\r\n  const { id } = useParams();\r\n\r\n  const [currentProduct, setCurrentProduct] = useState({});\r\n\r\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\r\n\r\n  const { products, cart } = state;\r\n\r\n  useEffect(() => {\r\n    // already in global store\r\n    if (products.length) {\r\n      setCurrentProduct(products.find((product) => product._id === id));\r\n    }\r\n    // retrieved from server\r\n    else if (data) {\r\n      dispatch({\r\n        type: UPDATE_PRODUCTS,\r\n        products: data.products,\r\n      });\r\n\r\n      data.products.forEach((product) => {\r\n        idbPromise('products', 'put', product);\r\n      });\r\n    }\r\n    // get cache from idb\r\n    else if (!loading) {\r\n      idbPromise('products', 'get').then((indexedProducts) => {\r\n        dispatch({\r\n          type: UPDATE_PRODUCTS,\r\n          products: indexedProducts,\r\n        });\r\n      });\r\n    }\r\n  }, [products, data, loading, dispatch, id]);\r\n\r\n  const addToCart = () => {\r\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\r\n    if (itemInCart) {\r\n      dispatch({\r\n        type: UPDATE_CART_QUANTITY,\r\n        _id: id,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\r\n      });\r\n      idbPromise('cart', 'put', {\r\n        ...itemInCart,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: ADD_TO_CART,\r\n        product: { ...currentProduct, purchaseQuantity: 1 },\r\n      });\r\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\r\n    }\r\n  };\r\n\r\n  const removeFromCart = () => {\r\n    dispatch({\r\n      type: REMOVE_FROM_CART,\r\n      _id: currentProduct._id,\r\n    });\r\n\r\n    idbPromise('cart', 'delete', { ...currentProduct });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {currentProduct && cart ? (\r\n        <div className=\"container my-1\">\r\n          <Link to=\"/\">← Back to Products</Link>\r\n\r\n          <h2>{currentProduct.name}</h2>\r\n\r\n          <p>{currentProduct.description}</p>\r\n\r\n          <p>\r\n            <strong>Price:</strong>${currentProduct.price}{' '}\r\n            <button onClick={addToCart}>Add to Cart</button>\r\n            <button\r\n              disabled={!cart.find((p) => p._id === currentProduct._id)}\r\n              onClick={removeFromCart}\r\n            >\r\n              Remove from Cart\r\n            </button>\r\n          </p>\r\n\r\n          <img\r\n            src={`/images/${currentProduct.image}`}\r\n            alt={currentProduct.name}\r\n          />\r\n        </div>\r\n      ) : null}\r\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\r\n      <Cart />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Detail;\r\n","import React from \"react\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\n\r\nconst NoMatch = () => {\r\n  return (\r\n    <div>\r\n      <Jumbotron>\r\n        <h1>404 Page Not Found</h1>\r\n        <h1>\r\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\r\n            🙄\r\n          </span>\r\n        </h1>\r\n      </Jumbotron>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoMatch;\r\n","//cart imports and exports needed\r\nimport {\r\n    UPDATE_PRODUCTS,\r\n    ADD_TO_CART,\r\n    UPDATE_CART_QUANTITY,\r\n    REMOVE_FROM_CART,\r\n    ADD_MULTIPLE_TO_CART,\r\n    UPDATE_CATEGORIES,\r\n    UPDATE_CURRENT_CATEGORY,\r\n    CLEAR_CART,\r\n    TOGGLE_CART\r\n  } from \"./actions\";\r\n  \r\n  const initialState = {\r\n    products: [],\r\n    categories: [],\r\n    currentCategory: '',\r\n    cart: [],\r\n    cartOpen: false\r\n  };\r\n  \r\n  export const reducers = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case UPDATE_PRODUCTS:\r\n        return {\r\n          ...state,\r\n          products: [...action.products],\r\n        };\r\n  \r\n      case ADD_TO_CART:\r\n        return {\r\n          ...state,\r\n          cartOpen: true,\r\n          cart: [...state.cart, action.product],\r\n        };\r\n  \r\n      case ADD_MULTIPLE_TO_CART:\r\n        return {\r\n          ...state,\r\n          cart: [...state.cart, ...action.products],\r\n        };\r\n  \r\n      case UPDATE_CART_QUANTITY:\r\n        return {\r\n          ...state,\r\n          cartOpen: true,\r\n          cart: state.cart.map(product => {\r\n            if (action._id === product._id) {\r\n              product.purchaseQuantity = action.purchaseQuantity\r\n            }\r\n            return product\r\n          })\r\n        };\r\n  \r\n      case REMOVE_FROM_CART:\r\n        let newState = state.cart.filter(product => {\r\n          return product._id !== action._id;\r\n        });\r\n  \r\n        return {\r\n          ...state,\r\n          cartOpen: newState.length > 0,\r\n          cart: newState\r\n        };\r\n  \r\n      case CLEAR_CART:\r\n        return {\r\n          ...state,\r\n          cartOpen: false,\r\n          cart: []\r\n        };\r\n  \r\n      case TOGGLE_CART:\r\n        return {\r\n          ...state,\r\n          cartOpen: !state.cartOpen\r\n        };\r\n  \r\n      case UPDATE_CATEGORIES:\r\n        return {\r\n          ...state,\r\n          categories: [...action.categories],\r\n        };\r\n  \r\n      case UPDATE_CURRENT_CATEGORY:\r\n        return {\r\n          ...state,\r\n          currentCategory: action.currentCategory\r\n        }\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export default reducers;","//imports and this section is needed for creating store reducers\r\nimport { createStore } from 'redux';\r\nimport reducers from './reducers';\r\n\r\nexport default createStore(reducers);","import React from \"react\"\nimport {Container} from 'react-bootstrap'\n\nconst Comment =() => {\nreturn(\n<Container>\n        <h2>Comment</h2>\n</Container>\n)\n}\n    \nexport default Comment","import React from \"react\"\nimport {Row,Container,Card} from 'react-bootstrap'\nimport blankprofile from \"../../assets/blankprofile.png\"\n\n\nconst Upload = () => {\n  const uploadImage = React.useRef(null)\n  const imageUploader = React.useRef(null)\n\n  const handleImageUpload = e =>{\n    const [file] = e.target.files\n    if (file) {\n      const reader = new FileReader()\n      const {current} = uploadImage\n      current.file= file\n      reader.onload=(e)=>{\n        current.src= e.target.result\n      }\n      reader.readAsDataURL(file)\n    }\n  }\n\n  return (\n    <Container>\n      <Row>\n        <Card style={{ width: '18rem' }} onClick={(()=> imageUploader.current.click())}>\n          <img ref={uploadImage} variant=\"top\" src={blankprofile} alt=\"\" style={{ height: '18rem' }} />\n          <input ref={imageUploader} type=\"file\" accept=\"image\" multiple={false} onChange={handleImageUpload} style={{display: \"none\"}}/>\n        </Card>\n      </Row>\n    </Container>\n\n  );\n}\n\n\nexport default Upload;\n","import React from \"react\"\nimport {Table} from 'react-bootstrap'\n\n\nconst Skills =() => {\nreturn(\n<Table striped bordered hover variant=\"dark\">\n  <tbody>\n    <tr><td className=\"draggable\" draggable=\"true\">My Skills</td></tr>\n    <tr><td className=\"draggable\" draggable=\"true\">HTML</td></tr>\n    <tr><td className=\"draggable\" draggable=\"true\">CSS</td></tr>\n    <tr><td className=\"draggable\" draggable=\"true\">Javascript</td></tr>\n    <tr><td className=\"draggable\" draggable=\"true\">React</td></tr>\n  </tbody>\n</Table>\n)\n}\n    \nexport default Skills","import React from 'react';\nimport Comment from '../components/Profile/Comment';\n// import History from '../components/Profile/History';\nimport Upload from '../components/Profile/Upload';\nimport Skills from '../components/Profile/Skills';\nimport {\n  Row, \n  Col,\n  Container\n} from 'react-bootstrap';\n\n\n\nconst Profile =() => {\n\nreturn(\n    <div>\n\n    <Container fluid>\n      <Row>\n        <Col>\n          <Upload />\n        </Col>\n        <Col>\n          <Comment />\n        </Col>\n        <Col>\n          <Skills />\n        </Col>\n      </Row>\n    </Container>\n\n  </div>\n)\n}\n\nexport default Profile;\n","//imports from pages\r\nimport Home from './pages/Home';\r\nimport Login from './pages/LogIn';\r\nimport Products from './pages/products';\r\nimport Success from './pages/Success';\r\nimport Contact from './pages/contact';\r\nimport Nav from './components/Nav';\r\nimport OrderHistory from './pages/OrderHistory';\r\nimport Detail from './pages/Detail';\r\nimport NoMatch from './pages/NoMatch';\r\nimport store from './utils/store';\r\nimport Profile from './pages/profile';\r\nimport { Provider } from 'react-redux';\r\nimport React from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport { ApolloClient, InMemoryCache, ApolloProvider, createHttpLink} from '@apollo/client';\r\nimport { setContext } from '@apollo/client/link/context';\r\n\r\n  // Construct our main GraphQL API endpoint\r\n  const httpLink = createHttpLink({\r\n    uri: '/graphql',\r\n  });\r\n\r\n  // Construct request middleware that will attach the JWT token to every request as an `authorization` header\r\n  const authLink = setContext((_, { headers }) => {\r\n    // get the authentication token from local storage if it exists\r\n    const token = localStorage.getItem('id_token');\r\n    // return the headers to the context so httpLink can read them\r\n    return {\r\n      headers: {\r\n        ...headers,\r\n        authorization: token ? `Bearer ${token}` : '',\r\n      },\r\n    };\r\n  });\r\n\r\n  const client = new ApolloClient({\r\n    // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\r\n    link: authLink.concat(httpLink),\r\n    cache: new InMemoryCache(),\r\n  });\r\n\r\n  function App() {\r\n    return (\r\n      <ApolloProvider client={client}>\r\n        <Router>\r\n          <>\r\n            <Navbar />\r\n            <div className=\"flex-column justify-flex-start min-100-vh backgroundGradient\">\r\n              <div className=\"container\">\r\n            <Provider store={store}>\r\n              <Nav />\r\n              <Switch>\r\n                <Route exact path=\"/\" component={Home} />\r\n                <Route exact path=\"/login\" component={Login} />\r\n                <Route exact path= \"/products\" component={Products} />\r\n                <Route exact path= \"/Contact\" component={Contact} />\r\n                <Route exact path=\"/success\" component={Success} />\r\n                <Route exact path=\"/orderHistory\" component={OrderHistory} />\r\n                <Route exact path=\"/products/:id\" component={Detail} />\r\n                <Route exact path= \"/profile\" component={Profile} />\r\n                <Route component={NoMatch} />\r\n              </Switch>\r\n            </Provider>\r\n            </div>\r\n          </div>\r\n        </>\r\n      </Router>\r\n    </ApolloProvider>\r\n    );\r\n  }\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n      <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n\r\n// ReactDOM.render(\r\n//   <React.StrictMode>\r\n//     <App />\r\n//   </React.StrictMode>,\r\n//   document.getElementById('root')\r\n// );","module.exports = __webpack_public_path__ + \"static/media/spinner.9b54dbe8.gif\";","module.exports = __webpack_public_path__ + \"static/media/blankprofile.ae18a9e6.png\";"],"sourceRoot":""}