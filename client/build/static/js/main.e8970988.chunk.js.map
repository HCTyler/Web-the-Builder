{"version":3,"sources":["pages/Home.js","pages/LogIn.js","pages/products.js","pages/profile.js","utils/mutations.js","utils/auth.js","components/SignupForm.js","components/LoginForm.js","components/Navbar.js","components/Footer.js","App.js","index.js"],"names":["Home","Login","Product","Profile","LOGIN_USER","gql","ADD_USER","decode","this","getToken","token","isTokenExpired","exp","Date","now","localStorage","removeItem","getItem","idToken","setItem","window","location","assign","reload","SignupForm","useState","username","email","password","userFormData","setUserFormData","validated","showAlert","setShowAlert","useMutation","addUser","error","useEffect","handleInputChange","event","target","name","value","handleFormSubmit","a","preventDefault","currentTarget","checkValidity","stopPropagation","variables","data","console","log","Auth","login","Form","noValidate","onSubmit","Alert","dismissible","onClose","show","variant","Group","Label","htmlFor","Control","type","placeholder","onChange","required","Feedback","Button","disabled","LoginForm","AppNavbar","showModal","setShowModal","Navbar","bg","expand","Container","fluid","Brand","as","Link","to","loggedIn","Nav","onClick","logout","Modal","size","onHide","aria-labelledby","Tab","defaultActiveKey","Header","closeButton","Title","id","Item","eventKey","Body","Content","Pane","handleModalClose","Footer","className","getFullYear","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","component","Products","ReactDOM","render","document","getElementById","StrictMode"],"mappings":"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","file":"static/js/main.e8970988.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst Home = () => {\n\n  return (\n    <div>\n      <h1>THIS IS OUR HOMEPAGEgdfgfd</h1>\n    </div>\n  );\n};\n\nexport default Home;","import React from 'react';\n\n\nconst Login =() => {\nreturn(\n    <div>\n    <h1>THIS IS OUR LOGIN PAGE</h1>\n  </div>\n)\n}\n\nexport default Login\n","import React from 'react';\n\n\nconst Product =() => {\nreturn(\n    <div>\n    <h1>THIS IS OUR PRODUCT PAGE</h1>\n  </div>\n)\n}\n\nexport default Product","import React from 'react';\n\n\nconst Profile =() => {\nreturn(\n    <div>\n    <h1>THIS IS OUR PROFILE PAGE</h1>\n  </div>\n)\n}\n\nexport default Profile\n","import { gql } from '@apollo/client';\r\n\r\nexport const LOGIN_USER = gql`\r\n  mutation login($email: String!, $password: String!) {\r\n    login(email: $email, password: $password) {\r\n      token\r\n      user {\r\n        _id\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_USER = gql`\r\n  mutation addUser($username: String!, $email: String!, $password: String!) {\r\n    addUser(username: $username, email: $email, password: $password) {\r\n      token\r\n      user {\r\n        _id\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;","import decode from 'jwt-decode';\r\n\r\nclass AuthService {\r\n  getProfile() {\r\n    return decode(this.getToken());\r\n  }\r\n\r\n  loggedIn() {\r\n    const token = this.getToken();\r\n    // If there is a token and it's not expired, return `true`\r\n    return token && !this.isTokenExpired(token) ? true : false;\r\n  }\r\n\r\n  isTokenExpired(token) {\r\n    // Decode the token to get its expiration time that was set by the server\r\n    const decoded = decode(token);\r\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\r\n    if (decoded.exp < Date.now() / 1000) {\r\n      localStorage.removeItem('id_token');\r\n      return true;\r\n    }\r\n    // If token hasn't passed its expiration time, return `false`\r\n    return false;\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem('id_token');\r\n  }\r\n\r\n  login(idToken) {\r\n    localStorage.setItem('id_token', idToken);\r\n    window.location.assign('/');\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('id_token');\r\n    window.location.reload();\r\n  }\r\n}\r\n\r\nexport default new AuthService();","import React, { useState, useEffect } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\n\nimport { useMutation } from '@apollo/client';\nimport { ADD_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst SignupForm = () => {\n  // set initial form state\n  const [userFormData, setUserFormData] = useState({\n    username: '',\n    email: '',\n    password: '',\n  });\n  // set state for form validation\n  const [validated] = useState(false);\n  // set state for alert\n  const [showAlert, setShowAlert] = useState(false);\n\n  const [addUser, { error }] = useMutation(ADD_USER);\n\n  useEffect(() => {\n    if (error) {\n      setShowAlert(true);\n    } else {\n      setShowAlert(false);\n    }\n  }, [error]);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const { data } = await addUser({\n        variables: { ...userFormData },\n      });\n      console.log(data);\n      Auth.login(data.addUser.token);\n    } catch (err) {\n      console.error(err);\n    }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n      {/* This is needed for the validation functionality above */}\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        {/* show alert if server response is bad */}\n        <Alert\n          dismissible\n          onClose={() => setShowAlert(false)}\n          show={showAlert}\n          variant=\"danger\"\n        >\n          Something went wrong with your signup!\n        </Alert>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"username\">Username</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Your username\"\n            name=\"username\"\n            onChange={handleInputChange}\n            value={userFormData.username}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Username is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"email\">Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Your email address\"\n            name=\"email\"\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Email is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"password\">Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Your password\"\n            name=\"password\"\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Password is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={\n            !(\n              userFormData.username &&\n              userFormData.email &&\n              userFormData.password\n            )\n          }\n          type=\"submit\"\n          variant=\"success\"\n        >\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default SignupForm;\n","import React, { useState, useEffect } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\n\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst LoginForm = () => {\n  const [userFormData, setUserFormData] = useState({ email: '', password: '' });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n\n  const [login, { error }] = useMutation(LOGIN_USER);\n\n  useEffect(() => {\n    if (error) {\n      setShowAlert(true);\n    } else {\n      setShowAlert(false);\n    }\n  }, [error]);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const { data } = await login({\n        variables: { ...userFormData },\n      });\n\n      console.log(data);\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setUserFormData({\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert\n          dismissible\n          onClose={() => setShowAlert(false)}\n          show={showAlert}\n          variant=\"danger\"\n        >\n          Something went wrong with your login credentials!\n        </Alert>\n        <Form.Group>\n          <Form.Label htmlFor=\"email\">Email</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Your email\"\n            name=\"email\"\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Email is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"password\">Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Your password\"\n            name=\"password\"\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Password is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.email && userFormData.password)}\n          type=\"submit\"\n          variant=\"success\"\n        >\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default LoginForm;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav, Container, Modal, Tab } from 'react-bootstrap';\nimport SignUpForm from './SignupForm';\nimport LoginForm from './LoginForm';\n\nimport Auth from '../utils/auth';\n\nconst AppNavbar = () => {\n  // set modal display state\n  const [showModal, setShowModal] = useState(false);\n\n  return (\n    <>\n      <Navbar bg='dark' variant='dark' expand='lg'>\n        <Container fluid>\n          <Navbar.Brand as={Link} to='/'>\n            Home\n          </Navbar.Brand>\n          <Navbar.Brand as={Link} to='/products'>\n            Videos\n          </Navbar.Brand>\n          <Navbar.Brand as={Link} to='/Contact'>\n            Contact\n          </Navbar.Brand>\n\n          {Auth.loggedIn() ? (\n                <>\n                  <Nav.Link as={Link} to='/profile'>\n                    My Profile\n                  </Nav.Link>\n                  <Nav.Link onClick={Auth.logout}>Logout</Nav.Link>\n                </>\n              ) : (\n                <Nav.Link as={Link} to='/login'>Login/Sign Up</Nav.Link>\n              )}\n\n        </Container>\n      </Navbar>\n\n\n      <Modal\n        size='lg'\n        show={showModal}\n        onHide={() => setShowModal(false)}\n        aria-labelledby='signup-modal'>\n        <Tab.Container defaultActiveKey='login'>\n          <Modal.Header closeButton>\n            <Modal.Title id='signup-modal'>\n              <Nav variant='pills'>\n                <Nav.Item>\n                  <Nav.Link eventKey='login'>Login</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey='signup'>Sign Up</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Tab.Content>\n              <Tab.Pane eventKey='login'>\n                <LoginForm handleModalClose={() => setShowModal(false)} />\n              </Tab.Pane>\n              <Tab.Pane eventKey='signup'>\n                <SignUpForm handleModalClose={() => setShowModal(false)} />\n              </Tab.Pane>\n            </Tab.Content>\n          </Modal.Body>\n        </Tab.Container>\n      </Modal>\n    </>\n  );\n};\n\nexport default AppNavbar;\n","import React from 'react';\n\nconst Footer = () => {\n  return (\n    <footer className=\"w-100 mt-auto text-dark p-4\">\n      <div className=\"container text-center mb-5\">\n        <h4>&copy; {new Date().getFullYear()} - Web-the-Builder</h4>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","//imports from pages\nimport Home from './pages/Home';\nimport Login from './pages/LogIn'\nimport Products from './pages/products'\nimport Profile from './pages/profile'\nimport AppNavbar from './components/Navbar';\nimport Footer from './components/Footer';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\n\n\n  // Construct our main GraphQL API endpoint\n  const httpLink = createHttpLink({\n    uri: '/graphql',\n  });\n\n  // Construct request middleware that will attach the JWT token to every request as an `authorization` header\n  const authLink = setContext((_, { headers }) => {\n    // get the authentication token from local storage if it exists\n    const token = localStorage.getItem('id_token');\n    // return the headers to the context so httpLink can read them\n    return {\n      headers: {\n        ...headers,\n        authorization: token ? `Bearer ${token}` : '',\n      },\n    };\n  });\n\n  const client = new ApolloClient({\n    // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache(),\n  });\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <>\n        <AppNavbar />\n        <div className=\"flex-column justify-flex-start min-100-vh\">\n        <div className=\"container\">\n          <Switch>\n            <Route exact path= \"/\" component={Home} />\n            <Route exact path= \"/login\" component={Login} />\n            <Route exact path= \"/products\" component={Products} />\n            <Route exact path= \"/profile\" component={Profile} />\n          </Switch>\n        </div>\n        <Footer />\n      </div>\n        </>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <BrowserRouter>\n      <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}